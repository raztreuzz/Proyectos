#!/bin/bash

# Configuraci√≥n
CONFIG_FILE="nms_config.cfg"
DISCORD_WEBHOOK=""
DIARY_FILE="nms_diary.log"
OBJECTIVES_FILE="nms_objectives.log"
SHIPS_FILE="nms_ships.log"

# Colores
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
CYAN='\033[0;36m'
PURPLE='\033[0;35m'
NC='\033[0m'

# Inicializar archivos
touch "$DIARY_FILE" "$OBJECTIVES_FILE" "$SHIPS_FILE"

# Funci√≥n para enviar mensajes a Caspian (Discord)
send_to_caspian() {
    local message="$1"
    if [ -n "$DISCORD_WEBHOOK" ]; then
        curl -H "Content-Type: application/json" -d "{\"content\":\"$message\"}" "$DISCORD_WEBHOOK" >/dev/null 2>&1
    fi
}

# Funci√≥n para cargar configuraci√≥n
load_config() {
    if [ -f "$CONFIG_FILE" ]; then
        source "$CONFIG_FILE"
    else
        echo -e "${YELLOW}Configuraci√≥n no encontrada. Creando nueva...${NC}"
        read -p "¬øConfigurar webhook Caspian? (s/n): " setup_caspian
        if [[ "$setup_caspian" == "s" ]]; then
            read -p "Ingresa tu Webhook de Discord (Caspian): " DISCORD_WEBHOOK
            echo "DISCORD_WEBHOOK='$DISCORD_WEBHOOK'" > "$CONFIG_FILE"
            send_to_caspian "üîµ **Caspian Online**: ¬°Asistente de NMS conectado!"
            echo -e "${GREEN}‚úì Configuraci√≥n guardada${NC}"
        fi
    fi
}

# Banner mejorado
show_banner() {
    clear
    echo -e "${PURPLE}"
    echo "   ‚ñê ‚ñÑ ‚ñÑ‚ñÑ‚ñÑ .‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ ‚ñÑ .‚ñÑ‚ñÑ‚ñÑ‚ñÑ‚ñÑ.‚ñÑ‚ñÑ ¬∑ "
    echo "  ‚Ä¢‚ñà‚ñå‚ñê‚ñà‚ñÄ‚ñÑ.‚ñÄ¬∑‚Ä¢‚ñà‚ñà‚ñÄ‚ñÑ‚ñÄ‚ñ™‚ñÄ‚ñÑ.‚ñÄ‚Ä¢‚ñà‚ñà‚ñ™‚ñê‚ñà "
    echo "  ‚ñê‚ñà‚ñê‚ñê‚ñå‚ñê‚ñÄ‚ñÄ‚ñ™‚ñÑ‚ñê‚ñà.‚ñ™‚ñÑ‚ñÄ‚ñÄ‚ñÄ‚ñÑ ‚ñê‚ñà.‚ñ™‚ñê‚ñà‚ñå‚ñê‚ñà"
    echo "  ‚ñà‚ñà‚ñê‚ñà‚ñå‚ñê‚ñà‚ñÑ‚ñÑ‚ñå‚ñê‚ñà‚ñå¬∑‚ñê‚ñà‚ñÑ‚ñà‚ñå‚ñê‚ñà‚ñå¬∑‚ñê‚ñà‚ñê‚ñê‚ñå"
    echo "  ‚ñÄ‚ñÄ ‚ñà‚ñ™ ‚ñÄ‚ñÄ‚ñÄ ‚ñÄ‚ñÄ‚ñÄ  ‚ñÄ‚ñÄ‚ñÄ ‚ñÄ‚ñÄ‚ñÄ ‚ñÄ‚ñÄ ‚ñÄ‚ñ™"
    echo -e "${CYAN}   Asistente Pro para No Man's Sky v3.0${NC}"
    echo -e "${BLUE}‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê${NC}"
}

# 1. Wiki Search con Registro en Discord
wiki_search() {
    show_banner
    echo -e "${YELLOW}== üîç Buscar en la Wiki ==${NC}"
    read -p "Ingresa tu b√∫squeda: " query
    xdg-open "https://nomanssky.fandom.com/es/wiki/Special:Search?query=${query}"
    send_to_caspian "üìö **B√∫squeda en Wiki**: \"$query\""
}

# 2. Calculadora de Comercio Mejorada
trade_calculator() {
    show_banner
    echo -e "${YELLOW}== üí∞ Calculadora de Comercio ==${NC}"
    
    PS3="Selecciona un recurso (o escribe 'otro'): "
    select resource in "Cobalto" "Emeril" "Oro" "Ferrita" "Otro"; do
        case $resource in
            "Otro") read -p "Nombre del recurso: " resource; break ;;
            *) break ;;
        esac
    done

    read -p "Precio de compra por unidad: " buy_price
    read -p "Precio de venta por unidad: " sell_price
    read -p "Cantidad a vender: " units

    profit=$(( (sell_price - buy_price) * units ))
    echo -e "${GREEN}Ganancia estimada: ${profit} unidades${NC}"

    trade_msg="üõí **Transacci√≥n**: ${units}u de ${resource} | Ganancia: ${profit}u"
    echo "[$(date +'%Y-%m-%d %H:%M')] $trade_msg" >> "$DIARY_FILE"
    send_to_caspian "$trade_msg"
    
    read -p "Presiona Enter para continuar..."
}

# 3. Diario de Exploraci√≥n Mejorado
explorer_diary() {
    while true; do
        show_banner
        echo -e "${YELLOW}== üìî Diario de Exploraci√≥n ==${NC}"
        echo "1. üìù Nueva entrada"
        echo "2. üìú Ver diario"
        echo "3. üåå Compartir √∫ltimo descubrimiento"
        echo "4. üè† Volver"
        read -p "Opci√≥n (1-4): " diary_choice

        case $diary_choice in
            1)
                echo -e "${CYAN}---- Nueva Entrada ----${NC}"
                read -p "Nombre del planeta/sistema: " planet
                read -p "Coordenadas (opcional): " coords
                read -p "Tipo de planeta: " planet_type
                read -p "Recursos importantes: " resources
                read -p "Notas adicionales: " notes
                
                entry="[$(date +'%Y-%m-%d %H:%M')] üåç ${planet} | üìå ${coords} | ü™ê ${planet_type} | üíé ${resources} | üìù ${notes}"
                echo "$entry" >> "$DIARY_FILE"
                
                echo -e "${GREEN}‚úì Entrada guardada${NC}"
                send_to_caspian "ü™ê **Nuevo planeta registrado**: ${planet} (${planet_type})"
                sleep 1
                ;;
            2)
                echo -e "${CYAN}---- Diario Completo ----${NC}"
                cat "$DIARY_FILE" | less
                ;;
            3)
                last_entry=$(tail -n 1 "$DIARY_FILE")
                if [ -n "$last_entry" ]; then
                    send_to_caspian "üìú **√öltimo descubrimiento**: $last_entry"
                    echo -e "${GREEN}‚úì Entrada compartida con Caspian${NC}"
                else
                    echo -e "${RED}No hay entradas en el diario${NC}"
                fi
                sleep 1
                ;;
            4) break ;;
            *) echo -e "${RED}Opci√≥n inv√°lida${NC}"; sleep 1 ;;
        esac
    done
}

# 4. Generador de Naves con Registro en Discord
ship_name_generator() {
    show_banner
    echo -e "${YELLOW}== üõ∏ Generador de Naves ==${NC}"
    
    PS3="Selecciona la clase: "
    select ship_class in "C üü¢" "B üîµ" "A üü£" "S üü°"; do
        case $ship_class in
            *üü¢*) ship_class="C"; break ;;
            *üîµ*) ship_class="B"; break ;;
            *üü£*) ship_class="A"; break ;;
            *üü°*) ship_class="S"; break ;;
            *) echo -e "${RED}Opci√≥n inv√°lida${NC}" ;;
        esac
    done

    PS3="Selecciona el tipo: "
    select ship_type in "Carga üì¶" "Combate ‚öîÔ∏è" "Exploraci√≥n üöÄ" "Ex√≥tica ‚ú®"; do
        case $ship_type in
            *üì¶*) ship_type="Carga"; break ;;
            *‚öîÔ∏è*) ship_type="Combate"; break ;;
            *üöÄ*) ship_type="Exploraci√≥n"; break ;;
            *‚ú®*) ship_type="Ex√≥tica"; break ;;
            *) echo -e "${RED}Opci√≥n inv√°lida${NC}" ;;
        esac
    done

    prefixes=("V√≥rtice" "√âter" "Infinito" "N√©mesis" "Eclipse" "Astral" "Quantum")
    suffixes=(" de la Perdici√≥n" " Estelar" " del Abismo" " Cu√°ntica" " de Atlas" " Celestial")
    random_name="${prefixes[$RANDOM % ${#prefixes[@]}]}${suffixes[$RANDOM % ${#suffixes[@]}]}"
    
    echo -e "\n${CYAN}    |-[${PURPLE}üöÄ${CYAN}]> ${GREEN}${random_name}${NC}"
    echo -e "${BLUE}    ‚îú‚îÄ Clase: ${ship_class}"
    echo -e "    ‚îî‚îÄ Tipo: ${ship_type}${NC}\n"

    ship_entry="[$(date +'%Y-%m-%d')] ${random_name} | Clase: ${ship_class} | Tipo: ${ship_type}"
    echo "$ship_entry" >> "$SHIPS_FILE"
    
    echo "1. Guardar en objetivos"
    echo "2. Compartir con Caspian"
    echo "3. Ambos"
    read -p "Opci√≥n (1-3): " save_choice
    
    case $save_choice in
        1) 
            echo "[ ] Encontrar nave: ${random_name} (Clase ${ship_class}, ${ship_type})" >> "$OBJECTIVES_FILE"
            echo -e "${GREEN}‚úì A√±adido a objetivos${NC}"
            ;;
        2)
            send_to_caspian "üõ∏ **Nueva nave generada**: ${random_name} (Clase ${ship_class}, ${ship_type})"
            ;;
        3)
            echo "[ ] Encontrar nave: ${random_name} (Clase ${ship_class}, ${ship_type})" >> "$OBJECTIVES_FILE"
            send_to_caspian "üõ∏ **Nave a√±adida a objetivos**: ${random_name}"
            echo -e "${GREEN}‚úì Guardado y compartido${NC}"
            ;;
    esac
    read -p "Presiona Enter para continuar..."
}

# 5. Gestor de Objetivos Mejorado
objectives_manager() {
    while true; do
        show_banner
        echo -e "${YELLOW}== üéØ Gestor de Objetivos ==${NC}"
        echo "1. üìù A√±adir objetivo"
        echo "2. ‚úÖ Marcar como completado"
        echo "3. üìú Ver objetivos"
        echo "4. üóëÔ∏è Eliminar objetivo"
        echo "5. üì¢ Compartir objetivos"
        echo "6. üè† Volver"
        read -p "Opci√≥n (1-6): " obj_choice

        case $obj_choice in
            1)
                read -p "Nuevo objetivo: " new_obj
                echo "[ ] ${new_obj}" >> "$OBJECTIVES_FILE"
                echo -e "${GREEN}‚úì Objetivo a√±adido${NC}"
                send_to_caspian "üéØ **Nuevo objetivo**: ${new_obj}"
                sleep 1
                ;;
            2)
                echo -e "${CYAN}---- Objetivos Pendientes ----${NC}"
                grep -n "^\[ \]" "$OBJECTIVES_FILE" || echo "No hay objetivos pendientes."
                read -p "N√∫mero del objetivo completado: " obj_num
                sed -i "${obj_num}s/^\[ \]/[‚úì]/" "$OBJECTIVES_FILE"
                completed_obj=$(sed -n "${obj_num}p" "$OBJECTIVES_FILE")
                echo -e "${GREEN}‚úì Objetivo completado${NC}"
                send_to_caspian "‚úÖ **Objetivo completado**: ${completed_obj}"
                sleep 1
                ;;
            3)
                echo -e "${CYAN}---- Todos los Objetivos ----${NC}"
                cat "$OBJECTIVES_FILE" | less
                ;;
            4)
                echo -e "${CYAN}---- Objetivos ----${NC}"
                nl -ba "$OBJECTIVES_FILE"
                read -p "N√∫mero del objetivo a eliminar: " del_num
                deleted_obj=$(sed -n "${del_num}p" "$OBJECTIVES_FILE")
                sed -i "${del_num}d" "$OBJECTIVES_FILE"
                echo -e "${GREEN}‚úì Objetivo eliminado${NC}"
                send_to_caspian "‚ùå **Objetivo eliminado**: ${deleted_obj}"
                sleep 1
                ;;
            5)
                objectives_list=$(cat "$OBJECTIVES_FILE")
                send_to_caspian "üìã **Lista de Objetivos**:\n${objectives_list}"
                echo -e "${GREEN}‚úì Objetivos compartidos${NC}"
                sleep 1
                ;;
            6) break ;;
            *) echo -e "${RED}Opci√≥n inv√°lida${NC}"; sleep 1 ;;
        esac
    done
}

# 6. Notificaciones Discord Mejoradas
discord_notifications() {
    while true; do
        show_banner
        echo -e "${YELLOW}== üì¢ Caspian (Discord) ==${NC}"
        echo "1. Enviar mensaje personalizado"
        echo "2. Notificar descubrimiento"
        echo "3. Compartir √∫ltima nave generada"
        echo "4. Estado actual"
        echo "5. Volver"
        read -p "Opci√≥n (1-5): " discord_choice

        case $discord_choice in
            1)
                read -p "Mensaje: " message
                send_to_caspian "üí¨ **Mensaje personalizado**: $message"
                echo -e "${GREEN}‚úì Mensaje enviado${NC}"
                ;;
            2)
                read -p "Planeta/sistema: " location
                read -p "Descripci√≥n: " description
                send_to_caspian "ü™ê **Nuevo descubrimiento**: **${location}** - ${description}"
                echo -e "${GREEN}‚úì Notificaci√≥n enviada${NC}"
                ;;
            3)
                last_ship=$(tail -n 1 "$SHIPS_FILE")
                if [ -n "$last_ship" ]; then
                    send_to_caspian "üõ∏ **√öltima nave generada**: $last_ship"
                    echo -e "${GREEN}‚úì Nave compartida${NC}"
                else
                    echo -e "${RED}No hay naves registradas${NC}"
                fi
                ;;
            4)
                stats="üìä **Estad√≠sticas**\n"
                stats+="‚Ä¢ üìî Entradas en diario: $(wc -l < "$DIARY_FILE")\n"
                stats+="‚Ä¢ üéØ Objetivos: $(grep -c "^\[ \]" "$OBJECTIVES_FILE") pendientes\n"
                stats+="‚Ä¢ üõ∏ Naves registradas: $(wc -l < "$SHIPS_FILE")"
                send_to_caspian "$stats"
                echo -e "${GREEN}‚úì Estad√≠sticas enviadas${NC}"
                ;;
            5) break ;;
            *) echo -e "${RED}Opci√≥n inv√°lida${NC}"; sleep 1 ;;
        esac
        sleep 1
    done
}

# 7. Configuraci√≥n Mejorada
config_menu() {
    while true; do
        show_banner
        echo -e "${YELLOW}== ‚öôÔ∏è Configuraci√≥n ==${NC}"
        echo "1. Configurar webhook Caspian"
        echo "2. Ver archivos de datos"
        echo "3. Exportar datos"
        echo "4. Borrar datos"
        echo "5. Volver"
        read -p "Opci√≥n (1-5): " config_choice

        case $config_choice in
            1)
                read -p "Nuevo Webhook: " new_webhook
                DISCORD_WEBHOOK="$new_webhook"
                echo "DISCORD_WEBHOOK='$new_webhook'" > "$CONFIG_FILE"
                send_to_caspian "‚öôÔ∏è **Configuraci√≥n actualizada**: Nuevo webhook configurado"
                echo -e "${GREEN}‚úì Webhook actualizado${NC}"
                sleep 1
                ;;
            2)
                echo -e "${CYAN}---- Diario (√∫ltimas 3 entradas) ----${NC}"
                tail -n 3 "$DIARY_FILE"
                echo -e "\n${CYAN}---- Objetivos Pendientes ----${NC}"
                grep "^\[ \]" "$OBJECTIVES_FILE"
                echo -e "\n${CYAN}---- Naves Registradas (√∫ltimas 3) ----${NC}"
                tail -n 3 "$SHIPS_FILE"
                read -p "Presiona Enter para continuar..."
                ;;
            3)
                tar -czf "nms_backup_$(date +%Y%m%d).tar.gz" "$DIARY_FILE" "$OBJECTIVES_FILE" "$SHIPS_FILE"
                echo -e "${GREEN}‚úì Backup creado: nms_backup_$(date +%Y%m%d).tar.gz${NC}"
                sleep 1
                ;;
            4)
                read -p "¬øBorrar TODOS los datos? (s/n): " confirm
                if [[ "$confirm" == "s" ]]; then
                    > "$DIARY_FILE"
                    > "$OBJECTIVES_FILE"
                    > "$SHIPS_FILE"
                    echo -e "${GREEN}‚úì Todos los datos borrados${NC}"
                    send_to_caspian "‚ö†Ô∏è **Todos los datos han sido borrados**"
                fi
                sleep 1
                ;;
            5) break ;;
            *) echo -e "${RED}Opci√≥n inv√°lida${NC}"; sleep 1 ;;
        esac
    done
}

# Men√∫ principal
main_menu() {
    while true; do
        show_banner
        echo -e "${GREEN}1. üìñ Buscar en la Wiki"
        echo "2. üí∞ Calculadora de Comercio"
        echo "3. üìî Diario de Exploraci√≥n"
        echo "4. üõ∏ Generador de Nombres de Naves"
        echo "5. üéØ Gestor de Objetivos"
        echo "6. üì¢ Notificaciones Discord"
        echo "7. ‚öôÔ∏è Configuraci√≥n"
        echo "8. üö™ Salir"
        echo -e "${BLUE}‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê${NC}"
        read -p "Elige una opci√≥n (1-8): " choice

        case $choice in
            1) wiki_search ;;
            2) trade_calculator ;;
            3) explorer_diary ;;
            4) ship_name_generator ;;
            5) objectives_manager ;;
            6) discord_notifications ;;
            7) config_menu ;;
            8) exit 0 ;;
            *) echo -e "${RED}Opci√≥n inv√°lida. Int√©ntalo de nuevo.${NC}"; sleep 1 ;;
        esac
    done
}

# ===== Inicio =====
load_config
show_banner
echo -e "${GREEN}Conectado a Caspian: $( [ -n "$DISCORD_WEBHOOK" ] && echo "‚úÖ" || echo "‚ùå" )${NC}"
sleep 1
main_menu  # Llamada al men√∫ principal al final